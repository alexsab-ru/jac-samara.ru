---
interface Props {
	models: any
}
const { models } = Astro.props
---

<section class="bg-gray-50" id="complectation" x-init={`selectedModel('${models[0].id}')`}>
	<div class="container">
		<h2 class="text-center">Подобрать комплектацию</h2>
		<div class="flex gap-4 flex-wrap justify-center my-10">
			{models.map(model => ((model.show && model.complectations) && (model.show && model.complectations.length)) ? (
				<span 
					class="inline border py-2.5 px-3 sm:px-6 rounded-full cursor-pointer min-w-[100px] w-auto sm:flex-initial text-xs sm:text-base text-center transition-colors hover:border-accent-500 hover:text-accent-500"
					:class={`{'border-accent-500 text-accent-500': currentModel.id === '${model.id}' }`}
					@click={`selectedModel('${model.id}')`}
				>{model.name}</span>
			) : (''))}
		</div>
		<img loading="lazy" :src="currentModel.colors[0].carImage" class="w-1/2" :alt="currentModel.name">
		<template x-if="currentModel.complectations && currentModel.complectations.length > 0">
			<div class="flex border-b">
				<template x-for="(c, idx) in currentModel.complectations" :key="idx">
					<span 
						class="pb-5 text-xl font-bold uppercase cursor-pointer"
						:class="{'text-accent-500': c.name === currentModelComplectation.name}"
						x-text="c.name"
						@click="selectedModelComplectation(c.name)"
					></span>
				</template>
			</div>
		</template>
		<pre x-text="JSON.stringify(currentModelComplectation)"></pre>
	</div>
</section>